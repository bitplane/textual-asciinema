{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Textual Asciinema Player","text":"<p>A widget for playing asciinema .cast files</p>"},{"location":"#try","title":"Try","text":"<pre><code>uvx textual-asciinema my-file.cast\n</code></pre>"},{"location":"#see","title":"See","text":"<ul> <li>\ud83d\udcfa youtube</li> </ul>"},{"location":"#read","title":"Read","text":"<ul> <li>\ud83c\udfe0 home</li> <li>\ud83d\udc31 src</li> <li>\ud83d\udc0d pypi</li> </ul>"},{"location":"#also","title":"Also","text":"<ul> <li>\ud83c\udfac asciinema - terminal recorder</li> <li>\ud83d\uddd4  - a pure python tty</li> <li>\ud83c\udfa5 tvmux - record your tmux projects</li> </ul>"},{"location":"#development-status","title":"Development Status","text":"<p>\u2705 COMPLETED - Keyframe Caching System (2025-08-04) - Keyframes created every 1 second during playback - Seek optimization using nearest keyframe as starting point - Cost tracking for future cache eviction algorithms - Terminal state reset for clean scrubbing experience - Performance: O(target_time) \u2192 O(keyframe_interval) for seeks</p>"},{"location":"#next-steps","title":"Next Steps","text":"<p>\ud83d\udd04 IN PROGRESS - File Offset Based Keyframes - Store byte offsets in .cast files instead of just frame indices - Enable streaming playback of massive cast files without loading everything into memory - Lazy frame parsing from file positions - True streaming for multi-GB recordings</p>"},{"location":"#implementation-plan","title":"Implementation Plan:","text":"<ol> <li>Enhance Keyframe class: Add <code>file_offset</code> field to store byte position in .cast file</li> <li>Update CastParser: Track file position during parsing, provide seek capability  </li> <li>Streaming seek: Jump to file offset, parse from there instead of replaying from memory</li> <li>Memory efficiency: Only keep frames in memory around current playback position</li> </ol>"},{"location":"#benefits","title":"Benefits:","text":"<ul> <li>Handle multi-GB cast files without memory exhaustion</li> <li>Instant seeking regardless of file size</li> <li>Constant memory usage independent of recording length</li> </ul>"}]}